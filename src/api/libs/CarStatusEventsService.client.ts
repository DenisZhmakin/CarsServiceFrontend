// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "CarStatusEventsService.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CarStatusEventsService } from "./CarStatusEventsService";
import type { ListCarStatusEventsResponse } from "./CarStatusEventsService";
import type { CarStatusEventsCarIdRequest } from "./CarStatusEventsService";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CarStatusEventsResponse } from "./CarStatusEventsService";
import type { CarStatusEventsRequest } from "./CarStatusEventsService";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service CarStatusEventsService
 */
export interface ICarStatusEventsServiceClient {
    /**
     * @generated from protobuf rpc: AddNewCarStatusEvents(CarStatusEventsRequest) returns (CarStatusEventsResponse);
     */
    addNewCarStatusEvents(input: CarStatusEventsRequest, options?: RpcOptions): UnaryCall<CarStatusEventsRequest, CarStatusEventsResponse>;
    /**
     * @generated from protobuf rpc: GetAllCarStatusEventsByCarID(CarStatusEventsCarIdRequest) returns (ListCarStatusEventsResponse);
     */
    getAllCarStatusEventsByCarID(input: CarStatusEventsCarIdRequest, options?: RpcOptions): UnaryCall<CarStatusEventsCarIdRequest, ListCarStatusEventsResponse>;
}
/**
 * @generated from protobuf service CarStatusEventsService
 */
export class CarStatusEventsServiceClient implements ICarStatusEventsServiceClient, ServiceInfo {
    typeName = CarStatusEventsService.typeName;
    methods = CarStatusEventsService.methods;
    options = CarStatusEventsService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AddNewCarStatusEvents(CarStatusEventsRequest) returns (CarStatusEventsResponse);
     */
    addNewCarStatusEvents(input: CarStatusEventsRequest, options?: RpcOptions): UnaryCall<CarStatusEventsRequest, CarStatusEventsResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CarStatusEventsRequest, CarStatusEventsResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllCarStatusEventsByCarID(CarStatusEventsCarIdRequest) returns (ListCarStatusEventsResponse);
     */
    getAllCarStatusEventsByCarID(input: CarStatusEventsCarIdRequest, options?: RpcOptions): UnaryCall<CarStatusEventsCarIdRequest, ListCarStatusEventsResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CarStatusEventsCarIdRequest, ListCarStatusEventsResponse>("unary", this._transport, method, opt, input);
    }
}
