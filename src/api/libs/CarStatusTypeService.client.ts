// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "CarStatusTypeService.proto" (syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { CarStatusTypeService } from "./CarStatusTypeService";
import type { ListCarStatusTypeResponse } from "./CarStatusTypeService";
import type { CarStatusTypeEmptyRequest } from "./CarStatusTypeService";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { CarStatusTypeResponse } from "./CarStatusTypeService";
import type { CarStatusTypeRequest } from "./CarStatusTypeService";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service CarStatusTypeService
 */
export interface ICarStatusTypeServiceClient {
    /**
     * @generated from protobuf rpc: AddNewCarStatusType(CarStatusTypeRequest) returns (CarStatusTypeResponse);
     */
    addNewCarStatusType(input: CarStatusTypeRequest, options?: RpcOptions): UnaryCall<CarStatusTypeRequest, CarStatusTypeResponse>;
    /**
     * @generated from protobuf rpc: GetAllCarStatusTypes(CarStatusTypeEmptyRequest) returns (ListCarStatusTypeResponse);
     */
    getAllCarStatusTypes(input: CarStatusTypeEmptyRequest, options?: RpcOptions): UnaryCall<CarStatusTypeEmptyRequest, ListCarStatusTypeResponse>;
}
/**
 * @generated from protobuf service CarStatusTypeService
 */
export class CarStatusTypeServiceClient implements ICarStatusTypeServiceClient, ServiceInfo {
    typeName = CarStatusTypeService.typeName;
    methods = CarStatusTypeService.methods;
    options = CarStatusTypeService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: AddNewCarStatusType(CarStatusTypeRequest) returns (CarStatusTypeResponse);
     */
    addNewCarStatusType(input: CarStatusTypeRequest, options?: RpcOptions): UnaryCall<CarStatusTypeRequest, CarStatusTypeResponse> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<CarStatusTypeRequest, CarStatusTypeResponse>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetAllCarStatusTypes(CarStatusTypeEmptyRequest) returns (ListCarStatusTypeResponse);
     */
    getAllCarStatusTypes(input: CarStatusTypeEmptyRequest, options?: RpcOptions): UnaryCall<CarStatusTypeEmptyRequest, ListCarStatusTypeResponse> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<CarStatusTypeEmptyRequest, ListCarStatusTypeResponse>("unary", this._transport, method, opt, input);
    }
}
